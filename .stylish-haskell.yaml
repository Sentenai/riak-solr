language_extensions:
- BangPatterns
- BinaryLiterals
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveAnyClass
- DeriveDataTypeable
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveTraversable
- DerivingStrategies
- ExistentialQuantification
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GADTs
- GeneralizedNewtypeDeriving
- NoImplicitPrelude
- InstanceSigs
- LambdaCase
- MultiParamTypeClasses
- MultiWayIf
- NamedFieldPuns
- OverloadedLabels
- OverloadedStrings
- PackageImports
- PartialTypeSignatures
- PatternSynonyms
- PolyKinds
- RankNTypes
- RecursiveDo
- ScopedTypeVariables
- StandaloneDeriving
- TupleSections
- TypeApplications
- TypeFamilies
- TypeFamilyDependencies
- TypeInType
- TypeOperators
- TypeSynonymInstances
- UnicodeSyntax
- ViewPatterns
newline: native
steps:
- simple_align:
    cases: false
    top_level_patterns: false
    records: false
- imports:
    long_list_align: inline
    pad_module_names: true
    list_padding: 2
    empty_list_align: inherit
    align: group
    space_surround: false
    list_align: after_alias
    separate_lists: false
- language_pragmas:
    style: compact
    remove_redundant: true
    align: true
columns: 80
